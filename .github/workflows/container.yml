name: Build and publish image

on:
  push:
    branches:
      - main
      - ci/*

env:
  CONTAINER_REGISTRY: ghcr.io
  REGISTRY_IMAGE: ghcr.io/${{ github.repository_owner }}/zero2prod

jobs:
  build:
    name: Build and publish image
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platform: [amd64]

    steps:
      - id: image-name
        run: echo "::set-output name=registry_image::${REGISTRY_IMAGE,,}"

      - uses: actions/checkout@v3

      - name: Install qemu dependency
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static
      - uses: docker/setup-buildx-action@v1

      - name: Login to container registry
        uses: docker/login-action@v2
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ${{ env.CONTAINER_REGISTRY }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ steps.image-name.outputs.registry_image }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=sha,format=long
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build image
        id: build
        uses: docker/build-push-action@v4
        with:
          platforms: linux/${{ matrix.platform }}
          cache-from: type=registry,ref=${{ steps.image-name.outputs.registry_image  }}:buildcache-${{ matrix.platform }}
          cache-to: type=registry,ref=${{ steps.image-name.outputs.registry_image }}:buildcache-${{ matrix.platform }},mode=max
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ steps.image-name.outputs.registry_image }},name-canonical=true,push=true,push-by-digest=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
      - name: Upload digest
        uses: actions/upload-artifact@v3
        with:
          name: digests
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  publish:
    name: Publish image
    runs-on: ubuntu-latest
    needs:
      - build

    steps:
      - id: image-name
        run: echo "::set-output name=registry_image::${REGISTRY_IMAGE,,}"
      - name: Download digests
        uses: actions/download-artifact@v3
        with:
          name: digests
          path: /tmp/digests
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ steps.image-name.outputs.registry_image }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=sha,format=long
            type=raw,value=latest,enable={{is_default_branch}}
      - name: Login to container registry
        uses: docker/login-action@v2
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ${{ env.CONTAINER_REGISTRY }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ steps.image-name.outputs.registry_image }}@sha256:%s ' *)
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ steps.image-name.outputs.registry_image }}:${{ steps.meta.outputs.version }}
